generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String           @id @default(uuid())
  email          String           @unique
  password       String
  name           String?
  transactions   Transaction[]
  budgets        Budget[]
  pots           Pot[]
  recurringBills RecurringBill[]
  categories     Category[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @default(now()) @updatedAt
  totalBalance   Float            @default(0)
  MonthlySummary MonthlySummary[]
  cards          Card[]
}

model Transaction {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userEmail], references: [email])
  userEmail   String
  amount      Float
  type        String
  category    String
  description String?
  date        DateTime
  card        Card?    @relation(fields: [cardId], references: [id])
  cardId      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model Budget {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userEmail], references: [email])
  userEmail   String
  category    String
  amountLimit Float
  amountSpent Float    @default(0)
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime @default(now())
}

model Pot {
  id            String   @id @default(uuid())
  user          User     @relation(fields: [userEmail], references: [email])
  userEmail     String
  title         String
  goalAmount    Float
  currentAmount Float    @default(0)
  category      String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt
}

model RecurringBill {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userEmail], references: [email])
  userEmail   String
  title       String
  amount      Float
  frequency   String
  nextDueDate DateTime
  category    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model Category {
  id        String   @id @default(uuid())
  name      String
  icon      String
  user      User     @relation(fields: [userEmail], references: [email])
  userEmail String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model MonthlySummary {
  id           String   @id @default(uuid())
  user         User     @relation(fields: [userEmail], references: [email])
  userEmail    String
  month        Int
  year         Int
  incomeTotal  Float    @default(0)
  expenseTotal Float    @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Card {
  id           String        @id @default(uuid())
  user         User          @relation(fields: [userEmail], references: [email])
  userEmail    String
  name         String
  type         String?
  last4        String?
  provider     String?
  balance      Float?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now()) @updatedAt
  transactions Transaction[]
}
