/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as SignupImport } from "./routes/signup";
import { Route as LogoutImport } from "./routes/logout";
import { Route as LoginImport } from "./routes/login";
import { Route as AuthedImport } from "./routes/_authed";
import { Route as IndexImport } from "./routes/index";
import { Route as AuthedTransactionsIndexImport } from "./routes/_authed/transactions.index";
import { Route as AuthedHomeIndexImport } from "./routes/_authed/home.index";
import { Route as AuthedCategoriesIndexImport } from "./routes/_authed/categories.index";

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: "/signup",
  path: "/signup",
  getParentRoute: () => rootRoute,
} as any);

const LogoutRoute = LogoutImport.update({
  id: "/logout",
  path: "/logout",
  getParentRoute: () => rootRoute,
} as any);

const LoginRoute = LoginImport.update({
  id: "/login",
  path: "/login",
  getParentRoute: () => rootRoute,
} as any);

const AuthedRoute = AuthedImport.update({
  id: "/_authed",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const AuthedTransactionsIndexRoute = AuthedTransactionsIndexImport.update({
  id: "/transactions/",
  path: "/transactions/",
  getParentRoute: () => AuthedRoute,
} as any);

const AuthedHomeIndexRoute = AuthedHomeIndexImport.update({
  id: "/home/",
  path: "/home/",
  getParentRoute: () => AuthedRoute,
} as any);

const AuthedCategoriesIndexRoute = AuthedCategoriesIndexImport.update({
  id: "/categories/",
  path: "/categories/",
  getParentRoute: () => AuthedRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/_authed": {
      id: "/_authed";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof AuthedImport;
      parentRoute: typeof rootRoute;
    };
    "/login": {
      id: "/login";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof LoginImport;
      parentRoute: typeof rootRoute;
    };
    "/logout": {
      id: "/logout";
      path: "/logout";
      fullPath: "/logout";
      preLoaderRoute: typeof LogoutImport;
      parentRoute: typeof rootRoute;
    };
    "/signup": {
      id: "/signup";
      path: "/signup";
      fullPath: "/signup";
      preLoaderRoute: typeof SignupImport;
      parentRoute: typeof rootRoute;
    };
    "/_authed/categories/": {
      id: "/_authed/categories/";
      path: "/categories";
      fullPath: "/categories";
      preLoaderRoute: typeof AuthedCategoriesIndexImport;
      parentRoute: typeof AuthedImport;
    };
    "/_authed/home/": {
      id: "/_authed/home/";
      path: "/home";
      fullPath: "/home";
      preLoaderRoute: typeof AuthedHomeIndexImport;
      parentRoute: typeof AuthedImport;
    };
    "/_authed/transactions/": {
      id: "/_authed/transactions/";
      path: "/transactions";
      fullPath: "/transactions";
      preLoaderRoute: typeof AuthedTransactionsIndexImport;
      parentRoute: typeof AuthedImport;
    };
  }
}

// Create and export the route tree

interface AuthedRouteChildren {
  AuthedCategoriesIndexRoute: typeof AuthedCategoriesIndexRoute;
  AuthedHomeIndexRoute: typeof AuthedHomeIndexRoute;
  AuthedTransactionsIndexRoute: typeof AuthedTransactionsIndexRoute;
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedCategoriesIndexRoute: AuthedCategoriesIndexRoute,
  AuthedHomeIndexRoute: AuthedHomeIndexRoute,
  AuthedTransactionsIndexRoute: AuthedTransactionsIndexRoute,
};

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "": typeof AuthedRouteWithChildren;
  "/login": typeof LoginRoute;
  "/logout": typeof LogoutRoute;
  "/signup": typeof SignupRoute;
  "/categories": typeof AuthedCategoriesIndexRoute;
  "/home": typeof AuthedHomeIndexRoute;
  "/transactions": typeof AuthedTransactionsIndexRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "": typeof AuthedRouteWithChildren;
  "/login": typeof LoginRoute;
  "/logout": typeof LogoutRoute;
  "/signup": typeof SignupRoute;
  "/categories": typeof AuthedCategoriesIndexRoute;
  "/home": typeof AuthedHomeIndexRoute;
  "/transactions": typeof AuthedTransactionsIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/_authed": typeof AuthedRouteWithChildren;
  "/login": typeof LoginRoute;
  "/logout": typeof LogoutRoute;
  "/signup": typeof SignupRoute;
  "/_authed/categories/": typeof AuthedCategoriesIndexRoute;
  "/_authed/home/": typeof AuthedHomeIndexRoute;
  "/_authed/transactions/": typeof AuthedTransactionsIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | ""
    | "/login"
    | "/logout"
    | "/signup"
    | "/categories"
    | "/home"
    | "/transactions";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | ""
    | "/login"
    | "/logout"
    | "/signup"
    | "/categories"
    | "/home"
    | "/transactions";
  id:
    | "__root__"
    | "/"
    | "/_authed"
    | "/login"
    | "/logout"
    | "/signup"
    | "/_authed/categories/"
    | "/_authed/home/"
    | "/_authed/transactions/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AuthedRoute: typeof AuthedRouteWithChildren;
  LoginRoute: typeof LoginRoute;
  LogoutRoute: typeof LogoutRoute;
  SignupRoute: typeof SignupRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
  LoginRoute: LoginRoute,
  LogoutRoute: LogoutRoute,
  SignupRoute: SignupRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authed",
        "/login",
        "/logout",
        "/signup"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/categories/",
        "/_authed/home/",
        "/_authed/transactions/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/logout": {
      "filePath": "logout.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/_authed/categories/": {
      "filePath": "_authed/categories.index.tsx",
      "parent": "/_authed"
    },
    "/_authed/home/": {
      "filePath": "_authed/home.index.tsx",
      "parent": "/_authed"
    },
    "/_authed/transactions/": {
      "filePath": "_authed/transactions.index.tsx",
      "parent": "/_authed"
    }
  }
}
ROUTE_MANIFEST_END */
